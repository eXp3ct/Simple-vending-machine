API:
Используется .NET 8 | ASP.Net core
Для работы с базой данных с подходм "Code First" использовал фреймворк EntityFramework,а так же с библеоткой для него для работы с PostgreSQL
Так же для работы с контекстом базы данных реализовал паттерн Repository и UnitOfWOrk
Имеется 2 контроллера для работы с напитками и картинками отдельно

Docker:
В докере поднятно 3 контейнера: База данных PostgreSQL, непосредственно WebAPI, а так же клиентское приложение на ReactJS.
Для того чтобы вам можно было сразу запустить проект я добавил Volume в корневую папку проекта, который использует PostgreSQL(уже настроена миграция и есть пару записей)

Клиентская сторона:
Использовал фреймворк ReactJS. На главной странице по адрессу '/' находится пользовательский режим. В нем есть кнопки с монетами, баланс, история покупок, а так же напитки. Для доступа к административному режиму нужно перейти на '/admin'. Интерфейс там такой же, но с кнопками для добавления новых монет, у каждой монеты есть Оранжевая кнопка - Заблокировать и Красная кнопка - Удалить. Для напитков так же есть кнопка добавления и импорта напитков через .json файл. Баланс, история покупок, а также номиналы монет сохраняются если переходить обратно в режим пользователя. Так же в админ. режиме у напитков появляются кнопки "Удалить" и "Редактировать", а так же по нажатию на картинку можно изменить картинку напитка. 
Добавление/Измненение картинок требует только формат .jpg


Из дополнительных заданий реализовано импорт напитков. По нажатию на кнопку вылезает модальное окно где нужно выбрать .json файл такого формата:

[
    {
        "name": "fanta",
        "quantity": 46,
        "price": 43
    },
    {
        "name": "lipton",
        "quantity": 84,
        "price": 39
    }
]

В случае импорта напитков они добавляются, но без картинки и нужно отдельно изменять картинку у каждого напитка.

Для запуска проекта я использовал следующее:
В корневой папке проекта(там где docker-compose.yml) пишем в консоль:
docker-compose up --build
После чего для доступа к клиентскому приложению можно осуществить по адресу 'localhost:3000', а так же к документации API Swagger по адресу 
'localhost:5051/swagger', при первом запуске проекта или удаления контейнеров будут отсутсовать картинки, т.к они хранятся в локальном хранилище контейнера.





